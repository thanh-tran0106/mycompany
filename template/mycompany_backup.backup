--
-- PostgreSQL database dump
--

-- Dumped from database version 14.13 (Ubuntu 14.13-0ubuntu0.22.04.1)
-- Dumped by pg_dump version 14.12 (Homebrew)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: tenant1; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA tenant1;


ALTER SCHEMA tenant1 OWNER TO postgres;

--
-- Name: tenant2; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA tenant2;


ALTER SCHEMA tenant2 OWNER TO postgres;

--
-- Name: tenant3; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA tenant3;


ALTER SCHEMA tenant3 OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: customers; Type: TABLE; Schema: tenant1; Owner: postgres
--

CREATE TABLE tenant1.customers (
    customer_id integer NOT NULL,
    customer_name character varying(100) NOT NULL,
    country character varying(50) NOT NULL
);


ALTER TABLE tenant1.customers OWNER TO postgres;

--
-- Name: customers_customer_id_seq; Type: SEQUENCE; Schema: tenant1; Owner: postgres
--

CREATE SEQUENCE tenant1.customers_customer_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE tenant1.customers_customer_id_seq OWNER TO postgres;

--
-- Name: customers_customer_id_seq; Type: SEQUENCE OWNED BY; Schema: tenant1; Owner: postgres
--

ALTER SEQUENCE tenant1.customers_customer_id_seq OWNED BY tenant1.customers.customer_id;


--
-- Name: orders; Type: TABLE; Schema: tenant1; Owner: postgres
--

CREATE TABLE tenant1.orders (
    order_id integer NOT NULL,
    customer_id integer,
    order_date date NOT NULL,
    product_id integer,
    quantity integer NOT NULL
);


ALTER TABLE tenant1.orders OWNER TO postgres;

--
-- Name: orders_order_id_seq; Type: SEQUENCE; Schema: tenant1; Owner: postgres
--

CREATE SEQUENCE tenant1.orders_order_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE tenant1.orders_order_id_seq OWNER TO postgres;

--
-- Name: orders_order_id_seq; Type: SEQUENCE OWNED BY; Schema: tenant1; Owner: postgres
--

ALTER SEQUENCE tenant1.orders_order_id_seq OWNED BY tenant1.orders.order_id;


--
-- Name: products; Type: TABLE; Schema: tenant1; Owner: postgres
--

CREATE TABLE tenant1.products (
    product_id integer NOT NULL,
    product_name character varying(100) NOT NULL,
    category character varying(50) NOT NULL,
    price numeric(10,2) NOT NULL
);


ALTER TABLE tenant1.products OWNER TO postgres;

--
-- Name: products_product_id_seq; Type: SEQUENCE; Schema: tenant1; Owner: postgres
--

CREATE SEQUENCE tenant1.products_product_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE tenant1.products_product_id_seq OWNER TO postgres;

--
-- Name: products_product_id_seq; Type: SEQUENCE OWNED BY; Schema: tenant1; Owner: postgres
--

ALTER SEQUENCE tenant1.products_product_id_seq OWNED BY tenant1.products.product_id;


--
-- Name: customers; Type: TABLE; Schema: tenant2; Owner: postgres
--

CREATE TABLE tenant2.customers (
    customer_id integer NOT NULL,
    customer_name character varying(100) NOT NULL,
    country character varying(50) NOT NULL
);


ALTER TABLE tenant2.customers OWNER TO postgres;

--
-- Name: customers_customer_id_seq; Type: SEQUENCE; Schema: tenant2; Owner: postgres
--

CREATE SEQUENCE tenant2.customers_customer_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE tenant2.customers_customer_id_seq OWNER TO postgres;

--
-- Name: customers_customer_id_seq; Type: SEQUENCE OWNED BY; Schema: tenant2; Owner: postgres
--

ALTER SEQUENCE tenant2.customers_customer_id_seq OWNED BY tenant2.customers.customer_id;


--
-- Name: orders; Type: TABLE; Schema: tenant2; Owner: postgres
--

CREATE TABLE tenant2.orders (
    order_id integer NOT NULL,
    customer_id integer,
    order_date date NOT NULL,
    product_id integer,
    quantity integer NOT NULL
);


ALTER TABLE tenant2.orders OWNER TO postgres;

--
-- Name: orders_order_id_seq; Type: SEQUENCE; Schema: tenant2; Owner: postgres
--

CREATE SEQUENCE tenant2.orders_order_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE tenant2.orders_order_id_seq OWNER TO postgres;

--
-- Name: orders_order_id_seq; Type: SEQUENCE OWNED BY; Schema: tenant2; Owner: postgres
--

ALTER SEQUENCE tenant2.orders_order_id_seq OWNED BY tenant2.orders.order_id;


--
-- Name: products; Type: TABLE; Schema: tenant2; Owner: postgres
--

CREATE TABLE tenant2.products (
    product_id integer NOT NULL,
    product_name character varying(100) NOT NULL,
    category character varying(50) NOT NULL,
    price numeric(10,2) NOT NULL
);


ALTER TABLE tenant2.products OWNER TO postgres;

--
-- Name: products_product_id_seq; Type: SEQUENCE; Schema: tenant2; Owner: postgres
--

CREATE SEQUENCE tenant2.products_product_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE tenant2.products_product_id_seq OWNER TO postgres;

--
-- Name: products_product_id_seq; Type: SEQUENCE OWNED BY; Schema: tenant2; Owner: postgres
--

ALTER SEQUENCE tenant2.products_product_id_seq OWNED BY tenant2.products.product_id;


--
-- Name: customers; Type: TABLE; Schema: tenant3; Owner: postgres
--

CREATE TABLE tenant3.customers (
    customer_id integer NOT NULL,
    customer_name character varying(100) NOT NULL,
    country character varying(50) NOT NULL
);


ALTER TABLE tenant3.customers OWNER TO postgres;

--
-- Name: customers_customer_id_seq; Type: SEQUENCE; Schema: tenant3; Owner: postgres
--

CREATE SEQUENCE tenant3.customers_customer_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE tenant3.customers_customer_id_seq OWNER TO postgres;

--
-- Name: customers_customer_id_seq; Type: SEQUENCE OWNED BY; Schema: tenant3; Owner: postgres
--

ALTER SEQUENCE tenant3.customers_customer_id_seq OWNED BY tenant3.customers.customer_id;


--
-- Name: orders; Type: TABLE; Schema: tenant3; Owner: postgres
--

CREATE TABLE tenant3.orders (
    order_id integer NOT NULL,
    customer_id integer,
    order_date date NOT NULL,
    product_id integer,
    quantity integer NOT NULL
);


ALTER TABLE tenant3.orders OWNER TO postgres;

--
-- Name: orders_order_id_seq; Type: SEQUENCE; Schema: tenant3; Owner: postgres
--

CREATE SEQUENCE tenant3.orders_order_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE tenant3.orders_order_id_seq OWNER TO postgres;

--
-- Name: orders_order_id_seq; Type: SEQUENCE OWNED BY; Schema: tenant3; Owner: postgres
--

ALTER SEQUENCE tenant3.orders_order_id_seq OWNED BY tenant3.orders.order_id;


--
-- Name: products; Type: TABLE; Schema: tenant3; Owner: postgres
--

CREATE TABLE tenant3.products (
    product_id integer NOT NULL,
    product_name character varying(100) NOT NULL,
    category character varying(50) NOT NULL,
    price numeric(10,2) NOT NULL
);


ALTER TABLE tenant3.products OWNER TO postgres;

--
-- Name: products_product_id_seq; Type: SEQUENCE; Schema: tenant3; Owner: postgres
--

CREATE SEQUENCE tenant3.products_product_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE tenant3.products_product_id_seq OWNER TO postgres;

--
-- Name: products_product_id_seq; Type: SEQUENCE OWNED BY; Schema: tenant3; Owner: postgres
--

ALTER SEQUENCE tenant3.products_product_id_seq OWNED BY tenant3.products.product_id;


--
-- Name: customers customer_id; Type: DEFAULT; Schema: tenant1; Owner: postgres
--

ALTER TABLE ONLY tenant1.customers ALTER COLUMN customer_id SET DEFAULT nextval('tenant1.customers_customer_id_seq'::regclass);


--
-- Name: orders order_id; Type: DEFAULT; Schema: tenant1; Owner: postgres
--

ALTER TABLE ONLY tenant1.orders ALTER COLUMN order_id SET DEFAULT nextval('tenant1.orders_order_id_seq'::regclass);


--
-- Name: products product_id; Type: DEFAULT; Schema: tenant1; Owner: postgres
--

ALTER TABLE ONLY tenant1.products ALTER COLUMN product_id SET DEFAULT nextval('tenant1.products_product_id_seq'::regclass);


--
-- Name: customers customer_id; Type: DEFAULT; Schema: tenant2; Owner: postgres
--

ALTER TABLE ONLY tenant2.customers ALTER COLUMN customer_id SET DEFAULT nextval('tenant2.customers_customer_id_seq'::regclass);


--
-- Name: orders order_id; Type: DEFAULT; Schema: tenant2; Owner: postgres
--

ALTER TABLE ONLY tenant2.orders ALTER COLUMN order_id SET DEFAULT nextval('tenant2.orders_order_id_seq'::regclass);


--
-- Name: products product_id; Type: DEFAULT; Schema: tenant2; Owner: postgres
--

ALTER TABLE ONLY tenant2.products ALTER COLUMN product_id SET DEFAULT nextval('tenant2.products_product_id_seq'::regclass);


--
-- Name: customers customer_id; Type: DEFAULT; Schema: tenant3; Owner: postgres
--

ALTER TABLE ONLY tenant3.customers ALTER COLUMN customer_id SET DEFAULT nextval('tenant3.customers_customer_id_seq'::regclass);


--
-- Name: orders order_id; Type: DEFAULT; Schema: tenant3; Owner: postgres
--

ALTER TABLE ONLY tenant3.orders ALTER COLUMN order_id SET DEFAULT nextval('tenant3.orders_order_id_seq'::regclass);


--
-- Name: products product_id; Type: DEFAULT; Schema: tenant3; Owner: postgres
--

ALTER TABLE ONLY tenant3.products ALTER COLUMN product_id SET DEFAULT nextval('tenant3.products_product_id_seq'::regclass);


--
-- Data for Name: customers; Type: TABLE DATA; Schema: tenant1; Owner: postgres
--

COPY tenant1.customers (customer_id, customer_name, country) FROM stdin;
1	Alice Smith	USA
2	Bob Johnson	UK
3	Charlie Davis	Canada
\.


--
-- Data for Name: orders; Type: TABLE DATA; Schema: tenant1; Owner: postgres
--

COPY tenant1.orders (order_id, customer_id, order_date, product_id, quantity) FROM stdin;
1	1	2023-07-15	1	1
2	2	2023-07-16	2	2
3	1	2023-07-17	3	1
4	3	2023-07-18	4	1
5	2	2023-07-19	5	3
\.


--
-- Data for Name: products; Type: TABLE DATA; Schema: tenant1; Owner: postgres
--

COPY tenant1.products (product_id, product_name, category, price) FROM stdin;
1	'Laptop'	 'Electronics'	1200.00
2	'Headset'	 'Accessories'	50.00
3	'Keyboard'	 'Accessories'	40.00
4	'Monitor'	 'Electronics'	300.00
5	'Mouse'	 'Accessories'	25.00
\.


--
-- Data for Name: customers; Type: TABLE DATA; Schema: tenant2; Owner: postgres
--

COPY tenant2.customers (customer_id, customer_name, country) FROM stdin;
1	Charlie	UK
2	Diana	Australia
\.


--
-- Data for Name: orders; Type: TABLE DATA; Schema: tenant2; Owner: postgres
--

COPY tenant2.orders (order_id, customer_id, order_date, product_id, quantity) FROM stdin;
1	1	2024-09-20	1	3
2	2	2024-09-21	2	2
\.


--
-- Data for Name: products; Type: TABLE DATA; Schema: tenant2; Owner: postgres
--

COPY tenant2.products (product_id, product_name, category, price) FROM stdin;
1	Smartphone	Electronics	500.00
2	Keyboard	Accessories	75.00
\.


--
-- Data for Name: customers; Type: TABLE DATA; Schema: tenant3; Owner: postgres
--

COPY tenant3.customers (customer_id, customer_name, country) FROM stdin;
1	Edward	Germany
2	Fiona	France
\.


--
-- Data for Name: orders; Type: TABLE DATA; Schema: tenant3; Owner: postgres
--

COPY tenant3.orders (order_id, customer_id, order_date, product_id, quantity) FROM stdin;
1	1	2024-09-22	1	1
2	2	2024-09-23	2	4
\.


--
-- Data for Name: products; Type: TABLE DATA; Schema: tenant3; Owner: postgres
--

COPY tenant3.products (product_id, product_name, category, price) FROM stdin;
1	Tablet	Electronics	300.00
2	Headphones	Accessories	85.00
\.


--
-- Name: customers_customer_id_seq; Type: SEQUENCE SET; Schema: tenant1; Owner: postgres
--

SELECT pg_catalog.setval('tenant1.customers_customer_id_seq', 3, true);


--
-- Name: orders_order_id_seq; Type: SEQUENCE SET; Schema: tenant1; Owner: postgres
--

SELECT pg_catalog.setval('tenant1.orders_order_id_seq', 5, true);


--
-- Name: products_product_id_seq; Type: SEQUENCE SET; Schema: tenant1; Owner: postgres
--

SELECT pg_catalog.setval('tenant1.products_product_id_seq', 1, false);


--
-- Name: customers_customer_id_seq; Type: SEQUENCE SET; Schema: tenant2; Owner: postgres
--

SELECT pg_catalog.setval('tenant2.customers_customer_id_seq', 2, true);


--
-- Name: orders_order_id_seq; Type: SEQUENCE SET; Schema: tenant2; Owner: postgres
--

SELECT pg_catalog.setval('tenant2.orders_order_id_seq', 2, true);


--
-- Name: products_product_id_seq; Type: SEQUENCE SET; Schema: tenant2; Owner: postgres
--

SELECT pg_catalog.setval('tenant2.products_product_id_seq', 2, true);


--
-- Name: customers_customer_id_seq; Type: SEQUENCE SET; Schema: tenant3; Owner: postgres
--

SELECT pg_catalog.setval('tenant3.customers_customer_id_seq', 2, true);


--
-- Name: orders_order_id_seq; Type: SEQUENCE SET; Schema: tenant3; Owner: postgres
--

SELECT pg_catalog.setval('tenant3.orders_order_id_seq', 2, true);


--
-- Name: products_product_id_seq; Type: SEQUENCE SET; Schema: tenant3; Owner: postgres
--

SELECT pg_catalog.setval('tenant3.products_product_id_seq', 2, true);


--
-- Name: customers customers_pkey; Type: CONSTRAINT; Schema: tenant1; Owner: postgres
--

ALTER TABLE ONLY tenant1.customers
    ADD CONSTRAINT customers_pkey PRIMARY KEY (customer_id);


--
-- Name: orders orders_pkey; Type: CONSTRAINT; Schema: tenant1; Owner: postgres
--

ALTER TABLE ONLY tenant1.orders
    ADD CONSTRAINT orders_pkey PRIMARY KEY (order_id);


--
-- Name: products products_pkey; Type: CONSTRAINT; Schema: tenant1; Owner: postgres
--

ALTER TABLE ONLY tenant1.products
    ADD CONSTRAINT products_pkey PRIMARY KEY (product_id);


--
-- Name: customers customers_pkey; Type: CONSTRAINT; Schema: tenant2; Owner: postgres
--

ALTER TABLE ONLY tenant2.customers
    ADD CONSTRAINT customers_pkey PRIMARY KEY (customer_id);


--
-- Name: orders orders_pkey; Type: CONSTRAINT; Schema: tenant2; Owner: postgres
--

ALTER TABLE ONLY tenant2.orders
    ADD CONSTRAINT orders_pkey PRIMARY KEY (order_id);


--
-- Name: products products_pkey; Type: CONSTRAINT; Schema: tenant2; Owner: postgres
--

ALTER TABLE ONLY tenant2.products
    ADD CONSTRAINT products_pkey PRIMARY KEY (product_id);


--
-- Name: customers customers_pkey; Type: CONSTRAINT; Schema: tenant3; Owner: postgres
--

ALTER TABLE ONLY tenant3.customers
    ADD CONSTRAINT customers_pkey PRIMARY KEY (customer_id);


--
-- Name: orders orders_pkey; Type: CONSTRAINT; Schema: tenant3; Owner: postgres
--

ALTER TABLE ONLY tenant3.orders
    ADD CONSTRAINT orders_pkey PRIMARY KEY (order_id);


--
-- Name: products products_pkey; Type: CONSTRAINT; Schema: tenant3; Owner: postgres
--

ALTER TABLE ONLY tenant3.products
    ADD CONSTRAINT products_pkey PRIMARY KEY (product_id);


--
-- Name: orders orders_customer_id_fkey; Type: FK CONSTRAINT; Schema: tenant1; Owner: postgres
--

ALTER TABLE ONLY tenant1.orders
    ADD CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES tenant1.customers(customer_id);


--
-- Name: orders orders_product_id_fkey; Type: FK CONSTRAINT; Schema: tenant1; Owner: postgres
--

ALTER TABLE ONLY tenant1.orders
    ADD CONSTRAINT orders_product_id_fkey FOREIGN KEY (product_id) REFERENCES tenant1.products(product_id);


--
-- Name: orders orders_customer_id_fkey; Type: FK CONSTRAINT; Schema: tenant2; Owner: postgres
--

ALTER TABLE ONLY tenant2.orders
    ADD CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES tenant2.customers(customer_id);


--
-- Name: orders orders_product_id_fkey; Type: FK CONSTRAINT; Schema: tenant2; Owner: postgres
--

ALTER TABLE ONLY tenant2.orders
    ADD CONSTRAINT orders_product_id_fkey FOREIGN KEY (product_id) REFERENCES tenant2.products(product_id);


--
-- Name: orders orders_customer_id_fkey; Type: FK CONSTRAINT; Schema: tenant3; Owner: postgres
--

ALTER TABLE ONLY tenant3.orders
    ADD CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES tenant3.customers(customer_id);


--
-- Name: orders orders_product_id_fkey; Type: FK CONSTRAINT; Schema: tenant3; Owner: postgres
--

ALTER TABLE ONLY tenant3.orders
    ADD CONSTRAINT orders_product_id_fkey FOREIGN KEY (product_id) REFERENCES tenant3.products(product_id);


--
-- PostgreSQL database dump complete
--

